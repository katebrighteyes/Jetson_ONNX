1. 준비
  (1. Jetpack4.5 설치되어있어야함.
  (2. Jetson-inference 가 설치되어있어야 함.

2. 환경 설치
git clone https://github.com/katebrighteyes/Jetson_ONNX

./install_pytorch_1.8.0.sh  (30~1시간 소요)
./install_torch2trt.sh 

-- 여기서 부터는 코랩에서 진행하는 것을 권장 (jupyter notebook 이용)

3. pytorch-ssd 소스 내려받고 해당 폴더로 이동
    
cd ~/jetson-inference/python/training/detection/

git clone https://github.com/dusty-nv/pytorch-ssd
    
cd pytorch-ssd/

4. pretrained 와 requirements 준비

wget https://nvidia.box.com/shared/static/djf5w54rjvpqocsiztzaandq1m3avr7c.pth -O models/mobilenet-v1-ssd-mp-0_675.pth

pip3 install -v -r requirements.txt


5. 다운받고자 하는 데이터셋의 갯수를 파악한다 (시간 걸리니까 안해도 됨)

python3 open_images_downloader.py --stats-only --class-names "Apple,Orange,Banana,Strawberry,Grape,Pear,Pineapple,Watermelon" --data=data/fruit

6. 2500 개로 최대 수를 제한하여 데이터셋을 다운받는다. (코랩에서는 빠르지만 로컬에서는 1시간 정도 소요될 수 있음)

python3 open_images_downloader.py --max-images=2500 --class-names "Apple,Orange,Banana,Strawberry,Grape,Pear,Pineapple,Watermelon" --data=data/fruit

7. ssd mobilenet 트레이닝 (코랩에서 1시간 넘게 소요, 자비에에서 2시간, tx2에서 4시간 이상)

python3 train_ssd.py --data=data/fruit --model-dir=models/fruit --batch-size=4 --epochs=30 

* 코랩에서는 : python3 train_ssd.py --data=data/fruit --model-dir=models/fruit --batch-size=16 --epochs=30

* pretrained 가 있는 경우

  python3 train_ssd.py --data=data/fruit --model-dir=models/fruit --batch-size=4 --epochs=5 --resume=pretrained/mb1-ssd-Epoch-99-Loss-3.454277849197388.pth 


8. pth 파일 확인

cd models/fruit

코랩에서는 이 폴더에서 pth 파일하고 labels.txt 을 다운로드 받는다. 다운로드 폴더로 가서 확인한다.

-------------여기서부터는 jetson 보드에서 실행

8. onnx 폴더를 만들고 pth 파일하고 labels.txt 파일을 onnx 폴더로 copy 한다.

cd ~/jetson-inference/python/training/detection/

mkdir onnx

cp (다운로드 폴더나 model/fruit폴더)/labels.txt ./onnx/

cp (다운로드 폴더나 model/fruit폴더)/lmb1-ssd-Epoch-29-Loss-4.222576321467109.pth ./onnx/

9. pth -> onnx 변환

python3 onnx_export.py --model-dir=./onnx

10. detectnet 으로 실행

detectnet --model=./onnx/ssd-mobilenet.onnx --labels=./onnx/labels.txt \
          --input-blob=input_0 --output-cvg=scores --output-bbox=boxes \
            /dev/video0 
            
detectnet --model=./onnx/ssd-mobilenet.onnx --labels=./onnx/labels.txt \
          --input-blob=input_0 --output-cvg=scores --output-bbox=boxes \
            /dev/video1 
